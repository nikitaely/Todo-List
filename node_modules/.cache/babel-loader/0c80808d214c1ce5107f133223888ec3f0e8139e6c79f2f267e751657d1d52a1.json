{"ast":null,"code":"var _jsxFileName = \"/Users/makbuk/Desktop/ kata/Todo-List/src/components/TaskList/TaskList.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task';\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends Component {\n  render() {\n    const {\n      tasks,\n      onDeleted,\n      setCompleted,\n      editTask\n    } = this.props;\n    const elements = tasks.map(el => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        setCompleted: val => setCompleted(el.id, val),\n        onDeleted: () => onDeleted(el.id),\n        task: el.task,\n        completed: el.completed,\n        date: el.date,\n        id: el.id,\n        timer: el.timer,\n        editTask: value => editTask(el.id, value)\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n}\nTaskList.defaultProps = {\n  tasks: [{\n    task: 'FirstTask'\n  }]\n};\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.object),\n  onDeleted: PropTypes.func,\n  setCompleted: PropTypes.func\n};","map":{"version":3,"names":["React","Component","PropTypes","Task","TaskList","render","tasks","onDeleted","setCompleted","editTask","props","elements","map","el","val","id","task","completed","date","timer","value","defaultProps","propTypes","arrayOf","object","func"],"sources":["/Users/makbuk/Desktop/ kata/Todo-List/src/components/TaskList/TaskList.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from '../Task';\n\nimport './TaskList.css';\n\nexport default class TaskList extends Component {\n  render() {\n    const { tasks, onDeleted, setCompleted, editTask } = this.props;\n    const elements = tasks.map((el) => {\n      return (\n        <Task\n          setCompleted={(val) => setCompleted(el.id, val)}\n          onDeleted={() => onDeleted(el.id)}\n          key={el.id}\n          task={el.task}\n          completed={el.completed}\n          date={el.date}\n          id={el.id}\n          timer={el.timer}\n          editTask={(value) => editTask(el.id, value)}\n        />\n      );\n    });\n    return <ul className=\"todo-list\">{elements}</ul>;\n  }\n}\nTaskList.defaultProps = {\n  tasks: [{ task: 'FirstTask' }],\n};\n\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.object),\n  onDeleted: PropTypes.func,\n  setCompleted: PropTypes.func,\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,IAAI,MAAM,SAAS;AAE1B,OAAO,gBAAgB;AAAC;AAExB,eAAe,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAC9CI,MAAM,GAAG;IACP,MAAM;MAAEC,KAAK;MAAEC,SAAS;MAAEC,YAAY;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAC/D,MAAMC,QAAQ,GAAGL,KAAK,CAACM,GAAG,CAAEC,EAAE,IAAK;MACjC,oBACE,QAAC,IAAI;QACH,YAAY,EAAGC,GAAG,IAAKN,YAAY,CAACK,EAAE,CAACE,EAAE,EAAED,GAAG,CAAE;QAChD,SAAS,EAAE,MAAMP,SAAS,CAACM,EAAE,CAACE,EAAE,CAAE;QAElC,IAAI,EAAEF,EAAE,CAACG,IAAK;QACd,SAAS,EAAEH,EAAE,CAACI,SAAU;QACxB,IAAI,EAAEJ,EAAE,CAACK,IAAK;QACd,EAAE,EAAEL,EAAE,CAACE,EAAG;QACV,KAAK,EAAEF,EAAE,CAACM,KAAM;QAChB,QAAQ,EAAGC,KAAK,IAAKX,QAAQ,CAACI,EAAE,CAACE,EAAE,EAAEK,KAAK;MAAE,GANvCP,EAAE,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAOV;IAEN,CAAC,CAAC;IACF,oBAAO;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEJ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM;EAClD;AACF;AACAP,QAAQ,CAACiB,YAAY,GAAG;EACtBf,KAAK,EAAE,CAAC;IAAEU,IAAI,EAAE;EAAY,CAAC;AAC/B,CAAC;AAEDZ,QAAQ,CAACkB,SAAS,GAAG;EACnBhB,KAAK,EAAEJ,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACsB,MAAM,CAAC;EAC1CjB,SAAS,EAAEL,SAAS,CAACuB,IAAI;EACzBjB,YAAY,EAAEN,SAAS,CAACuB;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}