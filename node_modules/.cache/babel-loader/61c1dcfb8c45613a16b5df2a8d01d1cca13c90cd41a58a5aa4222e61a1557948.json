{"ast":null,"code":"var _jsxFileName = \"/Users/makbuk/Desktop/ kata/Todo-List/src/components/Task/Task.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction edit(el) {\n  console.log(el);\n  this.setState(_ref => {\n    let {\n      edit\n    } = _ref;\n    return {\n      edit: !edit\n    };\n  });\n}\nfunction editText(el) {\n  el.preventDefault();\n  el.target[0].value = this.task;\n  let text = el.target[0].value;\n  if (text.length > 0) {\n    this.props.editTask(text);\n  }\n  this.setState(() => ({\n    edit: false\n  }));\n}\nfunction pauseTimer() {\n  this.setState({\n    paused: true\n  });\n}\nfunction playTimer() {\n  this.setState({\n    paused: false\n  });\n}\nfunction timerTask() {\n  let {\n    timer\n  } = this.state;\n  let minutes = Math.floor(timer / (1000 * 60));\n  let seconds = Math.floor(timer % (1000 * 60) / 1000);\n  if (timer > 0) {\n    return `  ${String(minutes).padStart(2, '0')} : ${String(seconds).padStart(2, '0')}`;\n  } else {\n    return '  0:0';\n  }\n}\nfunction TaskText(edit) {\n  if (edit) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: this.props.id,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editText.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"description\",\n          value: this.task,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: this.props.id,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: this.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-play\",\n        onClick: playTimer.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-pause\",\n        onClick: pauseTimer.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), timerTask.call(this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"description\",\n      children: [\"created \", formatDistanceToNow(this.date), \" ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_c = TaskText;\nexport default class Task extends Component {\n  constructor() {\n    super(...arguments);\n    this.task = '';\n  }\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState(_ref2 => {\n        let {\n          paused\n        } = _ref2;\n        return {\n          date: this.date,\n          timer: paused ? this.state.timer : this.state.timer - 1000\n        };\n      });\n    }, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  render() {\n    // const { task, date, onDeleted, completed, setCompleted } = this.props;\n    const {\n      id,\n      task,\n      date,\n      completed,\n      paused,\n      timer,\n      onDeleted,\n      setCompleted,\n      edit,\n      toggleEdit,\n      editTask,\n      playTimer,\n      pauseTimer\n    } = this.props;\n    this.date = date;\n    this.task = task;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: completed ? 'completed' : null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          defaultChecked: !!completed,\n          id: this.props.id,\n          type: \"checkbox\",\n          onClick: setCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), TaskText.call(this, this.state.edit), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: edit.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDeleted,\n          className: \"icon icon-destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n}\nTask.defaultProps = {\n  completed: false\n};\nTask.propTypes = {\n  timer: PropTypes.number,\n  date: PropTypes.number,\n  completed: PropTypes.bool,\n  task: PropTypes.string,\n  onDeleted: PropTypes.func,\n  setCompleted: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"TaskText\");","map":{"version":3,"names":["React","Component","PropTypes","formatDistanceToNow","edit","el","console","log","setState","editText","preventDefault","target","value","task","text","length","props","editTask","pauseTimer","paused","playTimer","timerTask","timer","state","minutes","Math","floor","seconds","String","padStart","TaskText","id","bind","call","date","Task","componentDidMount","setInterval","componentWillUnmount","clearInterval","render","completed","onDeleted","setCompleted","toggleEdit","defaultProps","propTypes","number","bool","string","func"],"sources":["/Users/makbuk/Desktop/ kata/Todo-List/src/components/Task/Task.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\n\nfunction edit(el) {\n  console.log(el);\n  this.setState(({ edit }) => ({ edit: !edit }));\n}\n\nfunction editText(el) {\n  el.preventDefault();\n  el.target[0].value = this.task;\n  let text = el.target[0].value;\n  if (text.length > 0) {\n    this.props.editTask(text);\n  }\n  this.setState(() => ({ edit: false }));\n}\n\nfunction pauseTimer() {\n  this.setState({ paused: true });\n}\nfunction playTimer() {\n  this.setState({ paused: false });\n}\n\nfunction timerTask() {\n  let { timer } = this.state;\n  let minutes = Math.floor(timer / (1000 * 60));\n  let seconds = Math.floor((timer % (1000 * 60)) / 1000);\n\n  if (timer > 0) {\n    return `  ${String(minutes).padStart(2, '0')} : ${String(seconds).padStart(2, '0')}`;\n  } else {\n    return '  0:0';\n  }\n}\n\nfunction TaskText(edit) {\n  if (edit) {\n    return (\n      <label htmlFor={this.props.id}>\n        <form onSubmit={editText.bind(this)}>\n          <input className=\"description\" value={this.task} autoFocus></input>\n        </form>\n      </label>\n    );\n  } else\n    return (\n      <label htmlFor={this.props.id}>\n        <span className=\"title\">{this.task}</span>\n        <span className=\"description\">\n          <button className=\"icon icon-play\" onClick={playTimer.bind(this)}></button>\n          <button className=\"icon icon-pause\" onClick={pauseTimer.bind(this)}></button>\n          {timerTask.call(this)}\n        </span>\n        <span className=\"description\">created {formatDistanceToNow(this.date)} ago</span>\n      </label>\n    );\n}\n\nexport default class Task extends Component {\n  task = '';\n\n  \n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState(({ paused }) => ({\n        date: this.date,\n        timer: paused ? this.state.timer : this.state.timer - 1000,\n      }));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    // const { task, date, onDeleted, completed, setCompleted } = this.props;\n    const { id, task, date, completed, paused, timer, onDeleted, setCompleted, edit, toggleEdit, editTask, playTimer, pauseTimer } = this.props;\n    this.date = date;\n    this.task = task;\n    return (\n      <li className={completed ? 'completed' : null}>\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            defaultChecked={!!completed}\n            id={this.props.id}\n            type=\"checkbox\"\n            onClick={setCompleted}\n          />\n          {TaskText.call(this, this.state.edit)}\n          <button className=\"icon icon-edit\" onClick={edit.bind(this)} />\n          <button onClick={onDeleted} className=\"icon icon-destroy\" />\n        </div>\n      </li>\n    );\n  }\n}\n\nTask.defaultProps = {\n  completed: false,\n};\nTask.propTypes = {\n  timer: PropTypes.number,\n  date: PropTypes.number,\n  completed: PropTypes.bool,\n  task: PropTypes.string,\n  onDeleted: PropTypes.func,\n  setCompleted: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}